ifdef TARGET_PLATFORM_BEAGLEBONE

PRUBINDIR := ../rtlib/prubin

# support for ARM335x PRU (Programmable Realtime Unit) components and
SUPPORT_DIR := hal/support
PRU_SRC_DIR := hal/drivers/hal_pru_generic
PRU_MAINS   := pru_generic pru_decamux pru_generic_bbai pru_generic_bbai_direct_io_only pru_generic_direct_io_only
GEN_EMPTY_RESOURCE_TABLE := objects/generate_empty_resource_table
EMPTY_RESOURCE_TABLE := objects/empty_resource_table

# Assembly of PRU code
# the list of assembly source files
PRU_FILES := $(wildcard $(PRU_SRC_DIR)/*.p)

# .bin file produced by PASM -b goes in rtlib
PRU_BIN := $(patsubst %,$(PRUBINDIR)/%.bin,$(PRU_MAINS))
PRU_DBG := $(patsubst %,$(PRUBINDIR)/%.dbg,$(PRU_MAINS))

modules : $(PRU_BIN) $(PRU_DBG)

# .bin output, create listing
PASM_BINFLAGS := -b -L -d

# conversion rule for the above
# assemble .p  into .bin object files

$(PRUBINDIR)/%.bin $(PRUBINDIR)/%.dbg: $(PASM)

PRU_DEPS := $(patsubst %,objects/%,$(patsubst %,$(PRU_SRC_DIR)/%.d,$(PRU_MAINS)))
PRU_OBJS := $(patsubst %,objects/%,$(patsubst %,$(PRU_SRC_DIR)/%.bin,$(PRU_MAINS)))
PRU_DBGS := $(patsubst %,objects/%,$(patsubst %,$(PRU_SRC_DIR)/%.dbg,$(PRU_MAINS)))

$(PRU_DEPS): objects/%.d : %.p
	$(Q)mkdir -p $(dir $@)
	$(ECHO) generate PRU dependency $@ from $<
	$(Q)cpp -x c -MM -MG -MT objects/$(patsubst %.p,%.bin,$<) -o $@ $<

$(GEN_EMPTY_RESOURCE_TABLE): $(PRU_SRC_DIR)/generate_empty_resource_table.c
	$(Q)$(CC_FOR_BUILD) $(PRU_SRC_DIR)/generate_empty_resource_table.c -o $(GEN_EMPTY_RESOURCE_TABLE)

$(EMPTY_RESOURCE_TABLE): $(GEN_EMPTY_RESOURCE_TABLE)
	$(Q)$(GEN_EMPTY_RESOURCE_TABLE) $(EMPTY_RESOURCE_TABLE)


objects/%.bin objects/%.dbg : %.p objects/%.d $(PASM) $(EMPTY_RESOURCE_TABLE)
	$(Q)mkdir -p $(PRUBINDIR)
	$(ECHO) Assembling PRU code $@
	$(Q)$(PASM) $(PASM_BINFLAGS) $< $(basename $@)

$(PRU_BIN): $(PRUBINDIR)/%.bin : objects/$(PRU_SRC_DIR)/%.bin
	cp -f $^ $@
	$(Q)mkdir -p $(RTLIBDIR)
	ln -sf ../prubin/$(notdir $@) $(RTLIBDIR)/$(notdir $@)
	$(OBJCOPY) -I binary -O elf32-little --rename-section .data=.text --add-section .resource_table=$(EMPTY_RESOURCE_TABLE) $@ $@.tmp
	$(OBJCOPY) -I elf32-little --set-section-flags .text=code,alloc,load $@.tmp
	$(LD) -n --accept-unknown-input-arch $@.tmp -T hal/drivers/hal_pru_generic/linker.txt -o $@.elf

$(PRU_DBG): $(PRUBINDIR)/%.dbg : objects/$(PRU_SRC_DIR)/%.dbg
	cp -f $^ $@
	$(Q)mkdir -p $(RTLIBDIR)
	ln -sf ../prubin/$(notdir $@) $(RTLIBDIR)/$(notdir $@)

install_prubin:
	$(DIR) $(DESTDIR)$(HAL_RTLIB_BASE_DIR)/prubin
#	#  Copy .bin and .dbg files to the rtlib/prubin directory
	$(FILE) $(PRUBINDIR)/*.bin $(DESTDIR)$(HAL_RTLIB_BASE_DIR)/prubin
	$(FILE) $(PRUBINDIR)/*.dbg $(DESTDIR)$(HAL_RTLIB_BASE_DIR)/prubin
	$(FILE) $(PRUBINDIR)/*.elf $(DESTDIR)$(HAL_RTLIB_BASE_DIR)/prubin
#	#  Copy .bin and .dbg symlinks to the rtlib/modules directory
	$(DIR) $(DESTDIR)$(HAL_RTLIB_DIR)
	cp -a $(RTLIBDIR)/*.bin $(RTLIBDIR)/*.dbg $(DESTDIR)$(HAL_RTLIB_DIR)

install:  install_prubin

endif
