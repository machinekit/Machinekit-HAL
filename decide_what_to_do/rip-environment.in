#                                                                 -*-shell-script-*-
# Execute this file in the context of your shell, such as with
#  . @HAL_HOME@/scripts/rip-environment
# and your shell environment will be properly configured to run commands like
# comp, halcmd, halrun, iosh, and python with the emc modules available.

#    Copyright 2006, 2007, 2008, 2009 Jeff Epler <jepler@unpythonic.net>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

case "$0" in
    rip-environment|*/rip-environment)
	cat >&2 <<EOF
This script should be loaded in the context of your shell, by executing
	. $0
not executed as a separate command.
EOF
	exit 1 ;;
esac

if ! test "xyes" = "x@RUN_IN_PLACE@"; then
    echo "This script is only useful on run-in-place systems."
    return
fi

# stop it refusing to set env because of existing paths
#case "$PATH" in
#    @HAL_BIN_DIR@:*|*:@HAL_BIN_DIR@:*)
#	echo "This script only needs to be run once per shell session."
#	return ;;
#esac

RIP=@RUN_IN_PLACE@; export RIP
HAL_HOME=@HAL_HOME@; export HAL_HOME
HALVERSION="@HALVERSION@"; export HALVERSION
PATH=@HAL_BIN_DIR@:$HAL_HOME/scripts:"$PATH"
MACHINEKIT_INI=@HAL_HOME@/etc/machinekit/machinekit.ini; export MACHINEKIT_INI

if [ -z "$LD_LIBRARY_PATH" ]; then
    LD_LIBRARY_PATH=$HAL_HOME/lib
else
    LD_LIBRARY_PATH=$HAL_HOME/lib:"$LD_LIBRARY_PATH"
fi

if [ -z "$PYTHONPATH" ]; then
    PYTHONPATH=$HAL_HOME/lib/python
else
    PYTHONPATH=$HAL_HOME/lib/python:"$PYTHONPATH"
fi

if [ -z "PKG_CONFIG_PATH" ]; then
    PKG_CONFIG_PATH=$HAL_HOME/share/pkgconfig
else
    PKG_CONFIG_PATH=$HAL_HOME/share/pkgconfig:${PKG_CONFIG_PATH}
fi


if [ -z "$MANPATH" ]; then
    if type -path manpath > /dev/null 2>&1; then
	MANPATH=$HAL_HOME/man:"$(manpath)"
    else
	MANPATH=$HAL_HOME/man:/usr/local/man:/usr/local/share/man:/usr/share/man
    fi
else
    MANPATH=$HAL_HOME/man:"$MANPATH"
fi

# TODO: if these completion directives give trouble for any versions
# of bash actively in use, protect them with checks of BASH_VERSINFO
if [ -z "$BASH_VERSINFO" ]; then
    : # not using bash -> complete not available
elif [ $BASH_VERSINFO -eq 2 ]; then
    complete -o dirnames -f -X '!*.ini' emc axis mdi
    complete -o dirnames -f -X '!*.hal' halrun halcmd
    complete -W 'start stop restart status' realtime
    complete -C "halcmd -C" halcmd
else
    _iningc () {
        case "$3" in
        *.ini)
        COMPREPLY=$(compgen -o plusdirs -f -X '!*.ngc' -- "$2")
        ;;
        *)
        COMPREPLY=$(compgen -o plusdirs -f -X '!*.ini' -- "$2")
        ;;
        esac
    }
    complete -o plusdirs -F _iningc emc axis
    complete -o plusdirs -f -X '!*.ini' mdi
    complete -o plusdirs -f -X '!*.hal' halrun halcmd
    complete -W 'start stop restart status' realtime
    complete -C "halcmd -C" halcmd
fi

if [ -f $HAL_HOME/src/Makefile ]; then
    build () { make -C $HAL_HOME/src "$@"; }
fi

export PYTHONPATH LD_LIBRARY_PATH
